{
  "name": "Android.viewpagenavigation",
  "tagline": "",
  "body": "###使用ViewPager+Fragment+ListView模仿网易新闻客户端首页切换效果。\r\n####先来看看activity_main布局文件\r\n```\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\" >\r\n    <LinearLayout\r\n        android:id=\"@+id/head\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n        <!--Tab由HorizontalScrollView和RadioGroup实现-->\r\n        <HorizontalScrollView\r\n            android:id=\"@+id/channelScrollView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"4\"\r\n            android:scrollbars=\"none\">\r\n            <RadioGroup\r\n                android:id=\"@+id/channelRadioGroup\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n            </RadioGroup>\r\n        </HorizontalScrollView>\r\n        <Button\r\n            android:id=\"@+id/allCategory\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:textSize=\"10sp\"\r\n            android:layout_margin=\"0dp\"\r\n            android:text=\"所有分类\"/>\r\n    </LinearLayout>\r\n    <android.support.v4.view.ViewPager\r\n        android:id=\"@+id/newsListViewPager\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@+id/head\"\r\n        android:layout_weight=\"1\">\r\n    </android.support.v4.view.ViewPager>\r\n    <!--下面的LinearLayout用来放所有分类，默认是隐藏的-->\r\n    <LinearLayout\r\n        android:id=\"@+id/allCategoryLayout\"\r\n        android:layout_below=\"@+id/head\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#ffffff\"\r\n        android:visibility=\"gone\">\r\n        <!--所有分类由Button填充，用GridView实现-->\r\n        <GridView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n            android:id=\"@+id/gridview\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:columnWidth=\"90dp\"\r\n            android:numColumns=\"auto_fit\"\r\n            android:verticalSpacing=\"10dp\"\r\n            android:horizontalSpacing=\"10dp\"\r\n            android:stretchMode=\"columnWidth\"\r\n            android:gravity=\"center\">\r\n        </GridView>\r\n    </LinearLayout>\r\n</RelativeLayout>\r\n```\r\n####再来看看其他布局文件\r\ntab_rb.xml：定义RadioGroup中RadioButton怎么显示\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RadioButton xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"30dp\"\r\n                android:paddingLeft=\"15dp\"\r\n\t\t\t\tandroid:background=\"@drawable/tab_selector\"\r\n                android:paddingRight=\"15dp\"\r\n\t\t\t\tandroid:paddingTop=\"10dp\"\r\n                android:paddingBottom=\"10dp\"\r\n              \tandroid:button=\"@null\" />\r\n\t<!--android:background=\"@drawable/tab_selector\"会读取tab_selector.xml文件，控制RadioButton的背景显示-->\r\n\t<!--android:button=\"@null\"设置RadioButton前面的小圆圈不显示，只显示文字-->\r\n```\r\nchannelLayout.xml：定义每个分类下新闻列表怎么显示\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ListView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:id=\"@id/android:list\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:drawSelectorOnTop=\"true\"\r\n    android:scrollbars=\"vertical\" />\r\n```\r\nnews.xml：定义新闻列表中每条新闻怎么显示\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n    <TextView\r\n        android:id=\"@+id/newsTitle\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"30dp\"\r\n        android:textSize=\"20dp\"\r\n        android:paddingLeft=\"5dp\" />\r\n</LinearLayout>\r\n```\r\ndrawable/tab_selector.xml：控制导航的背景显示\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\r\n      <item android:state_checked=\"true\" ><!-- 选中状态 -->\r\n        <layer-list >\r\n            <item >\r\n                <shape android:shape=\"rectangle\">\r\n                    <stroke android:width=\"5dp\"  android:color=\"#ff0000\"/>    \r\n                </shape>\r\n            </item>\r\n            <item  android:bottom=\"5dp\" >\r\n                <shape android:shape=\"rectangle\" >\r\n           \t\t\t <solid android:color=\"#fff\"/>\r\n       \t\t\t </shape>\r\n            </item>\r\n        </layer-list> \r\n    </item>\r\n    <item ><!-- 默认状态 -->\r\n        <shape >\r\n            \t<solid  android:color=\"#FAFAFA\"/>\r\n        </shape>\r\n    </item>\r\n</selector>\r\n```\r\nnews_details.xml：定义新闻详细页面的显示\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n    <TextView\r\n        android:id=\"@+id/text\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n</LinearLayout>\r\n```\r\n####然后来看看MainActivity，先让MainActivity继承Fragment类和OnPageChangeListener接口\r\n```\r\npublic class MainActivity extends FragmentActivity implements ViewPager.OnPageChangeListener  {\r\n    HorizontalScrollView horizontalScrollView;\r\n    RadioGroup radioGroup;\r\n    ViewPager viewPager;\r\n    List<ChannelList> channelLists;\r\n    private List<ListFragment> fragmentList=new ArrayList<ListFragment>();\r\n    private PageFragmentAdapter adapter=null;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Button allCategory=(Button)findViewById(R.id.allCategory);\r\n        allCategory.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //下面实现展开所有分类功能\r\n                LinearLayout linearLayout=(LinearLayout)findViewById(R.id.allCategoryLayout);\r\n                if (linearLayout.getVisibility()==View.VISIBLE){\r\n                    linearLayout.setVisibility(View.INVISIBLE);\r\n                }else{\r\n                    linearLayout.setVisibility(View.VISIBLE);\r\n                }\r\n                //所有分类由GridView实现，里面由Button填充\r\n                GridView gridview = (GridView) findViewById(R.id.gridview);\r\n                ButtonAdapter adapter=new ButtonAdapter(MainActivity.this);\r\n                gridview.setAdapter(adapter);\r\n            }\r\n        });\r\n        horizontalScrollView=(HorizontalScrollView)findViewById(R.id.channelScrollView);\r\n        radioGroup=(RadioGroup)findViewById(R.id.channelRadioGroup);\r\n        viewPager=(ViewPager)findViewById(R.id.newsListViewPager);\r\n        //点击radioGroup中的item后更新viewPager\r\n        radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                viewPager.setCurrentItem(checkedId);\r\n            }\r\n        });\r\n        //给ViewPager设置监听器，当viewPager滑动时会去执行onPageSelected中的函数\r\n        viewPager.setOnPageChangeListener(this);\r\n        initData();//获取数据\r\n        initTab();//初始化Tab\r\n        initViewPager();//初始化ViewPager\r\n        radioGroup.check(0);//初始化显示第一个channel\r\n    }\r\n    //获取数据，实际情况是从数据库中获取\r\n    public void initData(){\r\n        channelLists=new ArrayList<ChannelList>();\r\n        channelLists.add(new ChannelList(\"头条\", Arrays.asList(new News[]{new News(\"头条一\"),new News(\"头条二\")})));\r\n        channelLists.add(new ChannelList(\"娱乐\", Arrays.asList(new News[]{new News(\"娱乐一\"),new News(\"娱乐二\")})));\r\n        channelLists.add(new ChannelList(\"体育\", Arrays.asList(new News[]{new News(\"体育一\"),new News(\"体育二\")})));\r\n        channelLists.add(new ChannelList(\"财经\", Arrays.asList(new News[]{new News(\"财经一\"),new News(\"财经二\")})));\r\n        channelLists.add(new ChannelList(\"科技\", Arrays.asList(new News[]{new News(\"科技一\"),new News(\"科技二\")})));\r\n        channelLists.add(new ChannelList(\"汽车\", Arrays.asList(new News[]{new News(\"汽车一\"),new News(\"汽车二\")})));\r\n        channelLists.add(new ChannelList(\"时尚\", Arrays.asList(new News[]{new News(\"时尚一\"),new News(\"时尚二\")})));\r\n        channelLists.add(new ChannelList(\"社会\", Arrays.asList(new News[]{new News(\"社会一\"),new News(\"社会二\")})));\r\n        channelLists.add(new ChannelList(\"热点\", Arrays.asList(new News[]{new News(\"热点一\"),new News(\"热点二\")})));\r\n    }\r\n    public void initTab(){\r\n        for(int i=0;i<channelLists.size();i++){\r\n            RadioButton rb=(RadioButton) LayoutInflater.from(this).inflate(R.layout.tab_rb, null);\r\n            rb.setId(i);\r\n            rb.setText(channelLists.get(i).getChannelName());\r\n            radioGroup.addView(rb);\r\n        }\r\n    }\r\n    public void initViewPager(){\r\n        for(int i=0;i<channelLists.size();i++){\r\n            ListFragment frag=new NewsFragment();\r\n            Bundle bundle=new Bundle();\r\n            //把每个channelList传给Fragment\r\n            //bundle中可以放继承Serializable接口的类的实例\r\n            bundle.putSerializable(\"channelList\",channelLists.get(i));\r\n            frag.setArguments(bundle);\r\n            fragmentList.add(frag);\r\n        }\r\n        //把fragmentList放到viewPage中\r\n        adapter=new PageFragmentAdapter(super.getSupportFragmentManager(),fragmentList);\r\n        viewPager.setAdapter(adapter);\r\n    }\r\n    @Override\r\n    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n    }\r\n    @Override\r\n    public void onPageSelected(int position) {\r\n        //当viewPager滑动时，更新上面的Tab目录状态\r\n        updateScorllView(position);\r\n    }\r\n    @Override\r\n    public void onPageScrollStateChanged(int state) {\r\n    }\r\n    public void updateScorllView(int position){\r\n        RadioButton rb=(RadioButton)radioGroup.getChildAt(position);\r\n        rb.setChecked(true);\r\n        int left=rb.getLeft();\r\n        int width=rb.getMeasuredWidth();\r\n        DisplayMetrics metrics=new DisplayMetrics();\r\n        super.getWindowManager().getDefaultDisplay().getMetrics(metrics);\r\n        int screenWidth=metrics.widthPixels;\r\n        int len=left+width/2-screenWidth/2;\r\n        horizontalScrollView.smoothScrollTo(len, 0);//滑动ScroollView\r\n    }\r\n}\r\n```\r\n####下面是两个实体类\r\n新闻类：\r\n```\r\npublic class News {\r\n    String title;\r\n    public News(String title) {\r\n        this.title = title;\r\n    }\r\n    public News() {\r\n    }\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n    @Override\r\n    public String toString() {\r\n        return \"News{\" +\r\n                \"title='\" + title + '\\'' +\r\n                '}';\r\n    }\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n}\r\n```\r\n导航分类类；有两个属性——导航分类的名字和新闻列表（放该导航下的所有新闻），实现了Serializable接口，为了可以让该对象可以被加到Bundle中被传递\r\n```\r\npublic class ChannelList implements Serializable {\r\n    String channelName;\r\n    List<News> newsList;\r\n    public String getChannelName() {\r\n        return channelName;\r\n    }\r\n    public void setChannelName(String channelName) {\r\n        this.channelName = channelName;\r\n    }\r\n    public List<News> getNewsList() {\r\n        return newsList;\r\n    }\r\n    public void setNewsList(List<News> newsList) {\r\n        this.newsList = newsList;\r\n    }\r\n    public ChannelList(String channelName, List<News> newsList) {\r\n        this.channelName = channelName;\r\n        this.newsList = newsList;\r\n    }\r\n}\r\n```\r\n####再来看看Fragment类，用来向ViewPager中添加fragment\r\n```\r\npublic class NewsFragment extends ListFragment {\r\n\tprivate ChannelList channelList;\r\n\tprivate View view;\r\n\t@Override\r\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n\t\tif(view==null){//优化View减少View的创建次数\r\n                        //在每个Fragment中显示的内容\r\n\t\t\tListView listView=(ListView)LayoutInflater.from(getActivity()).inflate(R.layout.channel_layout,null);\r\n\t\t\tArrayList<HashMap<String, String>> list = new ArrayList<HashMap<String, String>>();\r\n\t\t\tHashMap<String, String> map = new HashMap<String, String>();\r\n\t\t\t//把每个分类下的新闻标题放到list中\r\n\t\t\tfor (int i=0;i<channelList.getNewsList().size();i++){\r\n\t\t\t\tmap.put(\"news_title\", channelList.getNewsList().get(i).getTitle());\r\n\t\t\t\tlist.add(map);\r\n\t\t\t\tmap=new HashMap<String, String>();\r\n\t\t\t}\r\n\t\t\tSimpleAdapter listAdapter = new SimpleAdapter(getActivity(), list,\r\n\t\t\t\t\tR.layout.news, new String[] { \"news_title\"},\r\n\t\t\t\t\tnew int[] { R.id.newsTitle});\r\n\t\t\tsetListAdapter(listAdapter);\r\n\t\t\t//View中的setTag（Object）表示给View添加一个格外的数据，以后可以用getTag()将这个数据取出来。\r\n\t\t\tlistView.setTag(channelList);\r\n\t\t\t//设置fragment中的内容\r\n\t\t\tview=listView;\r\n\t\t}\r\n\t\tViewGroup parent=(ViewGroup)view.getParent();\r\n\t\tif(parent!=null){//如果View已经添加到容器中，要进行删除，否则会报错\r\n\t\t\tparent.removeView(view);\r\n\t\t}\r\n\t\treturn view;\r\n\t}\r\n\t@Override\r\n\tpublic void setArguments(Bundle bundle) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tchannelList=(ChannelList)bundle.getSerializable(\"channelList\");\r\n\t}\r\n\t@Override\r\n\tpublic void onListItemClick(ListView l, View v, int position, long id) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tsuper.onListItemClick(l, v, position, id);\r\n\t\t//当点击某条新闻标题时，跳转到新闻详细页面，传入分类名和新闻的Title\r\n\t\tIntent intent=new Intent(getActivity(), NewsDetails.class);\r\n\t\tintent.putExtra(\"channelName\",((ChannelList)(l.getTag())).getChannelName());\r\n\t\tintent.putExtra(\"newsTitle\",((ChannelList)l.getTag()).getNewsList().get(position).getTitle());\r\n\t\tstartActivity(intent);\r\n\t}\r\n}\r\n```\r\n####接下来看两个adapter\r\nPageFragmentAdapter——用来给Fragment添加内容，向ViewPager中添加fragment需要FragmentPagerAdapter，但它是个抽象类，所以需要有各类来继承它，这就取名PageFragmentAdapter\r\n```\r\npublic class PageFragmentAdapter extends FragmentPagerAdapter {\r\n\tprivate List<ListFragment> fragmentList;\r\n\tprivate FragmentManager fm;\r\n\tpublic PageFragmentAdapter(FragmentManager fm, List<ListFragment> fragmentList) {\r\n\t\tsuper(fm);\r\n\t\t// TODO Auto-generated constructor stub\r\n\t\tthis.fragmentList=fragmentList;\r\n\t\tthis.fm=fm;\r\n\t}\r\n\t@Override\r\n\tpublic Fragment getItem(int idx) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn (Fragment)(fragmentList.get(idx%fragmentList.size()));\r\n\t}\r\n\t@Override\r\n\tpublic int getCount() {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn fragmentList.size();\r\n\t}\r\n\t@Override  \r\n\tpublic int getItemPosition(Object object) {  \r\n\t   return POSITION_NONE;//没有找到child要求重新加载\r\n\t}\r\n}\r\n```\r\nButtonAdapter——该Adapter用来向所有分类中添加Button\r\n```\r\npublic class ButtonAdapter extends BaseAdapter {\r\n    private Activity activity;\r\n    public ButtonAdapter(Activity c) {\r\n        activity = c;\r\n    }\r\n    public int getCount() {\r\n        return Buttons.length;\r\n    }\r\n    public Object getItem(int position) {\r\n        return null;\r\n    }\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n    // create a new ImageView for each item referenced by the Adapter\r\n    public View getView(final int position, View convertView, ViewGroup parent) {\r\n        Button button;\r\n        if (convertView == null) {  // if it's not recycled, initialize some attributes\r\n            button = new Button(activity);\r\n        } else {\r\n            button = (Button) convertView;\r\n        }\r\n        button.setText(Buttons[position]);\r\n        button.setId(position);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ViewPager viewPager=(ViewPager)activity.findViewById(R.id.newsListViewPager);\r\n                viewPager.setCurrentItem(position);\r\n                LinearLayout linearLayout=(LinearLayout)activity.findViewById(R.id.allCategoryLayout);\r\n                linearLayout.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n        return button;\r\n    }\r\n    // references to our images\r\n    private String[] Buttons = {\r\n            \"头条\",\"娱乐\",\"体育\",\"财经\",\"科技\",\"汽车\",\"时尚\",\"社会\",\"热点\"\r\n    };\r\n}\r\n```\r\n####最后，还有一个NewsDetailsActivity——用来显示新闻的详细信息，需要加到manifest中\r\n```\r\npublic class NewsDetailsActivity extends Activity {\r\n    private TextView textView;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.news_details);\r\n        Intent intent=getIntent();\r\n        String channelName=intent.getStringExtra(\"channelName\");\r\n        String newsTitle=intent.getStringExtra(\"newsTitle\");\r\n        textView=(TextView)findViewById(R.id.text);\r\n        textView.setText(\"分类：\"+channelName+\" 新闻：\"+newsTitle);\r\n    }\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}